---
// Language Selector Component
// ------------
// Description: A dropdown component for language selection with flags.

import { languages, getLanguageFromUrl, addLanguageToUrl } from '../../config/i18n'

// Get current language from URL
const currentLanguage = getLanguageFromUrl(Astro.url.pathname)
const currentLangData = languages.find(lang => lang.code === currentLanguage)

// Generate language switch URLs
const languageUrls = languages.map(lang => ({
	...lang,
	url: addLanguageToUrl(Astro.url.pathname, lang.code)
}))
---

<div class="relative inline-block text-left" x-data="{ open: false }">
	<div>
		<button
			type="button"
			class="inline-flex justify-center w-full rounded-md border border-gray-300 dark:border-gray-600 shadow-sm px-4 py-2 bg-white dark:bg-gray-800 text-sm font-medium text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
			@click="open = !open"
			@click.outside="open = false"
			aria-expanded="true"
			aria-haspopup="true"
		>
			<span class="flex items-center gap-2">
				<span class="text-lg">{currentLangData?.flag}</span>
				<span class="hidden sm:inline">{currentLangData?.nativeName}</span>
				<span class="sm:hidden">{currentLangData?.code.toUpperCase()}</span>
			</span>
			<svg class="-mr-1 ml-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
				<path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
			</svg>
		</button>
	</div>

	<div
		x-show="open"
		x-transition:enter="transition ease-out duration-100"
		x-transition:enter-start="transform opacity-0 scale-95"
		x-transition:enter-end="transform opacity-100 scale-100"
		x-transition:leave="transition ease-in duration-75"
		x-transition:leave-start="transform opacity-100 scale-100"
		x-transition:leave-end="transform opacity-0 scale-95"
		class="origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5 divide-y divide-gray-100 dark:divide-gray-700 focus:outline-none z-50"
		role="menu"
		aria-orientation="vertical"
		style="display: none;"
	>
		<div class="py-1" role="none">
			{languageUrls.map((lang) => (
				<a
					href={lang.url}
					class={`group flex items-center px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 ${
						lang.code === currentLanguage 
							? 'bg-gray-100 dark:bg-gray-700 text-primary-600 dark:text-primary-400' 
							: 'text-gray-700 dark:text-gray-200'
					}`}
					role="menuitem"
				>
					<span class="text-lg mr-3">{lang.flag}</span>
					<div class="flex flex-col">
						<span class="font-medium">{lang.nativeName}</span>
						<span class="text-xs text-gray-500 dark:text-gray-400">{lang.name}</span>
					</div>
					{lang.code === currentLanguage && (
						<svg class="ml-auto h-4 w-4 text-primary-600 dark:text-primary-400" fill="currentColor" viewBox="0 0 20 20">
							<path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
						</svg>
					)}
				</a>
			))}
		</div>
	</div>
</div>

<script is:inline>
    // Initialize Alpine.js if not already loaded
    if (typeof window !== 'undefined' && !window.Alpine) {
        import('alpinejs').then((Alpine) => {
            window.Alpine = Alpine.default;
            window.Alpine.start();
        });
    }
</script>